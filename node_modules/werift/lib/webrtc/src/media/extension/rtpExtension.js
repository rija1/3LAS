"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useAudioLevelIndication = exports.useDependencyDescriptor = exports.useAbsSendTime = exports.useTransportWideCC = exports.useRepairedRtpStreamId = exports.useSdesRTPStreamId = exports.useSdesMid = void 0;
const src_1 = require("../../../../rtp/src");
const parameters_1 = require("../parameters");
function useSdesMid() {
    return new parameters_1.RTCRtpHeaderExtensionParameters({
        uri: src_1.RTP_EXTENSION_URI.sdesMid,
    });
}
exports.useSdesMid = useSdesMid;
function useSdesRTPStreamId() {
    return new parameters_1.RTCRtpHeaderExtensionParameters({
        uri: src_1.RTP_EXTENSION_URI.sdesRTPStreamID,
    });
}
exports.useSdesRTPStreamId = useSdesRTPStreamId;
function useRepairedRtpStreamId() {
    return new parameters_1.RTCRtpHeaderExtensionParameters({
        uri: src_1.RTP_EXTENSION_URI.repairedRtpStreamId,
    });
}
exports.useRepairedRtpStreamId = useRepairedRtpStreamId;
function useTransportWideCC() {
    return new parameters_1.RTCRtpHeaderExtensionParameters({
        uri: src_1.RTP_EXTENSION_URI.transportWideCC,
    });
}
exports.useTransportWideCC = useTransportWideCC;
function useAbsSendTime() {
    return new parameters_1.RTCRtpHeaderExtensionParameters({
        uri: src_1.RTP_EXTENSION_URI.absSendTime,
    });
}
exports.useAbsSendTime = useAbsSendTime;
function useDependencyDescriptor() {
    return new parameters_1.RTCRtpHeaderExtensionParameters({
        uri: src_1.RTP_EXTENSION_URI.dependencyDescriptor,
    });
}
exports.useDependencyDescriptor = useDependencyDescriptor;
function useAudioLevelIndication() {
    return new parameters_1.RTCRtpHeaderExtensionParameters({
        uri: src_1.RTP_EXTENSION_URI.audioLevelIndication,
    });
}
exports.useAudioLevelIndication = useAudioLevelIndication;
//# sourceMappingURL=rtpExtension.js.map