{"version":3,"file":"rtpExtension.js","sourceRoot":"","sources":["../../../../../src/media/extension/rtpExtension.ts"],"names":[],"mappings":";;;AAAA,6CAAwD;AACxD,8CAAgE;AAEhE,SAAgB,UAAU;IACxB,OAAO,IAAI,4CAA+B,CAAC;QACzC,GAAG,EAAE,uBAAiB,CAAC,OAAO;KAC/B,CAAC,CAAC;AACL,CAAC;AAJD,gCAIC;AAED,SAAgB,kBAAkB;IAChC,OAAO,IAAI,4CAA+B,CAAC;QACzC,GAAG,EAAE,uBAAiB,CAAC,eAAe;KACvC,CAAC,CAAC;AACL,CAAC;AAJD,gDAIC;AAED,SAAgB,sBAAsB;IACpC,OAAO,IAAI,4CAA+B,CAAC;QACzC,GAAG,EAAE,uBAAiB,CAAC,mBAAmB;KAC3C,CAAC,CAAC;AACL,CAAC;AAJD,wDAIC;AAED,SAAgB,kBAAkB;IAChC,OAAO,IAAI,4CAA+B,CAAC;QACzC,GAAG,EAAE,uBAAiB,CAAC,eAAe;KACvC,CAAC,CAAC;AACL,CAAC;AAJD,gDAIC;AAED,SAAgB,cAAc;IAC5B,OAAO,IAAI,4CAA+B,CAAC;QACzC,GAAG,EAAE,uBAAiB,CAAC,WAAW;KACnC,CAAC,CAAC;AACL,CAAC;AAJD,wCAIC;AAED,SAAgB,uBAAuB;IACrC,OAAO,IAAI,4CAA+B,CAAC;QACzC,GAAG,EAAE,uBAAiB,CAAC,oBAAoB;KAC5C,CAAC,CAAC;AACL,CAAC;AAJD,0DAIC;AAED,SAAgB,uBAAuB;IACrC,OAAO,IAAI,4CAA+B,CAAC;QACzC,GAAG,EAAE,uBAAiB,CAAC,oBAAoB;KAC5C,CAAC,CAAC;AACL,CAAC;AAJD,0DAIC","sourcesContent":["import { RTP_EXTENSION_URI } from \"../../../../rtp/src\";\nimport { RTCRtpHeaderExtensionParameters } from \"../parameters\";\n\nexport function useSdesMid() {\n  return new RTCRtpHeaderExtensionParameters({\n    uri: RTP_EXTENSION_URI.sdesMid,\n  });\n}\n\nexport function useSdesRTPStreamId() {\n  return new RTCRtpHeaderExtensionParameters({\n    uri: RTP_EXTENSION_URI.sdesRTPStreamID,\n  });\n}\n\nexport function useRepairedRtpStreamId() {\n  return new RTCRtpHeaderExtensionParameters({\n    uri: RTP_EXTENSION_URI.repairedRtpStreamId,\n  });\n}\n\nexport function useTransportWideCC() {\n  return new RTCRtpHeaderExtensionParameters({\n    uri: RTP_EXTENSION_URI.transportWideCC,\n  });\n}\n\nexport function useAbsSendTime() {\n  return new RTCRtpHeaderExtensionParameters({\n    uri: RTP_EXTENSION_URI.absSendTime,\n  });\n}\n\nexport function useDependencyDescriptor() {\n  return new RTCRtpHeaderExtensionParameters({\n    uri: RTP_EXTENSION_URI.dependencyDescriptor,\n  });\n}\n\nexport function useAudioLevelIndication() {\n  return new RTCRtpHeaderExtensionParameters({\n    uri: RTP_EXTENSION_URI.audioLevelIndication,\n  });\n}\n"]}