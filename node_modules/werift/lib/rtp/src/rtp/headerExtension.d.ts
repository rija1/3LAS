/// <reference types="node" />
import { Extension } from "./rtp";
export declare const RTP_EXTENSION_URI: {
    readonly sdesMid: "urn:ietf:params:rtp-hdrext:sdes:mid";
    readonly sdesRTPStreamID: "urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id";
    readonly repairedRtpStreamId: "urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id";
    readonly transportWideCC: "http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01";
    readonly absSendTime: "http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time";
    readonly dependencyDescriptor: "https://aomediacodec.github.io/av1-rtp-spec/#dependency-descriptor-rtp-header-extension";
    readonly audioLevelIndication: "urn:ietf:params:rtp-hdrext:ssrc-audio-level";
};
export type TransportWideCCPayload = number;
export type AudioLevelIndicationPayload = {
    v: boolean;
    level: number;
};
export declare function rtpHeaderExtensionsParser(extensions: Extension[], extIdUriMap: {
    [id: number]: string;
}): {
    [uri: string]: any;
};
export declare function serializeSdesMid(id: string): Buffer;
export declare function serializeSdesRTPStreamID(id: string): Buffer;
export declare function serializeRepairedRtpStreamId(id: string): Buffer;
export declare function serializeTransportWideCC(transportSequenceNumber: number): Buffer;
export declare function serializeAbsSendTime(ntpTime: bigint): Buffer;
