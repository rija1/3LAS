{"version":3,"file":"lipsyncCallback.js","sourceRoot":"","sources":["../../../../../rtp/src/processor/lipsyncCallback.ts"],"names":[],"mappings":";;;AAAA,uCAAuE;AAEvE,MAAa,eAAgB,SAAQ,qBAAW;IAG9C,YAAY,UAAmC,EAAE;QAC/C,KAAK,CACH,CAAC,MAAM,EAAE,EAAE;YACT,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACtB;QACH,CAAC,EACD,CAAC,MAAM,EAAE,EAAE;YACT,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACtB;QACH,CAAC,EACD,OAAO,CACR,CAAC;QAfJ;;;;;WAAiD;QACjD;;;;;WAAiD;QAiBjD;;;;mBAAY,CAAC,EAAkC,EAAE,EAAE;gBACjD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YACpB,CAAC;WAAC;QACF;;;;mBAAY,CAAC,EAAkC,EAAE,EAAE;gBACjD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YACpB,CAAC;WAAC;QAEF;;;;mBAAa,IAAI,CAAC,iBAAiB;WAAC;QACpC;;;;mBAAa,IAAI,CAAC,iBAAiB;WAAC;IAVpC,CAAC;CAWF;AA5BD,0CA4BC","sourcesContent":["import { LipsyncBase, LipSyncOptions, LipsyncOutput } from \"./lipsync\";\n\nexport class LipsyncCallback extends LipsyncBase {\n  private audioCb?: (input: LipsyncOutput) => void;\n  private videoCb?: (input: LipsyncOutput) => void;\n  constructor(options: Partial<LipSyncOptions> = {}) {\n    super(\n      (output) => {\n        if (this.audioCb) {\n          this.audioCb(output);\n        }\n      },\n      (output) => {\n        if (this.videoCb) {\n          this.videoCb(output);\n        }\n      },\n      options\n    );\n  }\n\n  pipeAudio = (cb: (input: LipsyncOutput) => void) => {\n    this.audioCb = cb;\n  };\n  pipeVideo = (cb: (input: LipsyncOutput) => void) => {\n    this.videoCb = cb;\n  };\n\n  inputAudio = this.processAudioInput;\n  inputVideo = this.processVideoInput;\n}\n"]}