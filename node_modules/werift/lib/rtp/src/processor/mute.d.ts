/// <reference types="node" />
import { DepacketizerOutput } from "./depacketizer";
import { Processor } from "./interface";
export type MuteInput = DepacketizerOutput;
export type MuteOutput = MuteInput;
export declare class MuteHandlerBase implements Processor<MuteInput, MuteOutput> {
    private output;
    private props;
    readonly id: string;
    private buffer;
    private started;
    private ended;
    private intervalId;
    private currentTimestamp;
    constructor(output: (o: MuteOutput) => void, props: {
        ptime: number;
        dummyPacket: Buffer;
        interval: number;
        sort?: boolean;
    });
    toJSON(): Record<string, any>;
    private startIfNeed;
    private stop;
    processInput: ({ frame, eol }: MuteInput) => MuteOutput[];
}
