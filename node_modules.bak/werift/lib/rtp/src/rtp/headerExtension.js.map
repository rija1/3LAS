{"version":3,"file":"headerExtension.js","sourceRoot":"","sources":["../../../../../rtp/src/rtp/headerExtension.ts"],"names":[],"mappings":"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","sourcesContent":["import { BitStream, bufferReader, bufferWriter } from \"../../../common/src\";\nimport { Extension } from \"./rtp\";\n\nexport const RTP_EXTENSION_URI = {\n  sdesMid: \"urn:ietf:params:rtp-hdrext:sdes:mid\",\n  sdesRTPStreamID: \"urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id\",\n  repairedRtpStreamId: \"urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id\",\n  transportWideCC:\n    \"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\",\n  absSendTime: \"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\",\n  dependencyDescriptor:\n    \"https://aomediacodec.github.io/av1-rtp-spec/#dependency-descriptor-rtp-header-extension\",\n  audioLevelIndication: \"urn:ietf:params:rtp-hdrext:ssrc-audio-level\",\n} as const;\n\nexport type TransportWideCCPayload = number;\n\nexport type AudioLevelIndicationPayload = { v: boolean; level: number };\n\nexport function rtpHeaderExtensionsParser(\n  extensions: Extension[],\n  extIdUriMap: { [id: number]: string }\n): { [uri: string]: any } {\n  return extensions\n    .map((extension) => {\n      const uri = extIdUriMap[extension.id];\n      switch (uri) {\n        case RTP_EXTENSION_URI.sdesMid:\n        case RTP_EXTENSION_URI.sdesRTPStreamID:\n        case RTP_EXTENSION_URI.repairedRtpStreamId:\n          return { uri, value: extension.payload.toString() };\n        case RTP_EXTENSION_URI.transportWideCC:\n          return { uri, value: extension.payload.readUInt16BE() };\n        case RTP_EXTENSION_URI.absSendTime:\n          return {\n            uri,\n            value: bufferReader(extension.payload, [3])[0],\n          };\n        case RTP_EXTENSION_URI.audioLevelIndication: {\n          const stream = new BitStream(extension.payload);\n          const value: AudioLevelIndicationPayload = {\n            v: stream.readBits(1) === 1,\n            level: stream.readBits(7),\n          };\n          return { uri, value };\n        }\n        default:\n          return { uri, value: 0 };\n      }\n    })\n    .reduce((acc: { [uri: string]: any }, cur) => {\n      if (cur) acc[cur.uri] = cur.value;\n      return acc;\n    }, {});\n}\n\nexport function serializeSdesMid(id: string) {\n  return Buffer.from(id);\n}\n\nexport function serializeSdesRTPStreamID(id: string) {\n  return Buffer.from(id);\n}\n\nexport function serializeRepairedRtpStreamId(id: string) {\n  return Buffer.from(id);\n}\n\nexport function serializeTransportWideCC(transportSequenceNumber: number) {\n  return bufferWriter([2], [transportSequenceNumber]);\n}\n\nexport function serializeAbsSendTime(ntpTime: bigint) {\n  const buf = Buffer.alloc(3);\n  const time = (ntpTime >> 14n) & 0x00ffffffn;\n  buf.writeUIntBE(Number(time), 0, 3);\n  return buf;\n}\n"]}