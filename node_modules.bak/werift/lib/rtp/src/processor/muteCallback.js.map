{"version":3,"file":"muteCallback.js","sourceRoot":"","sources":["../../../../../rtp/src/processor/muteCallback.ts"],"names":[],"mappings":";;;AAAA,iCAAgE;AAEhE,MAAa,YAAa,SAAQ,sBAAe;IAG/C,YAAY,KAAuD;QACjE,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACV,IAAI,IAAI,CAAC,EAAE,EAAE;gBACX,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;aACZ;QACH,CAAC,EAAE,KAAK,CAAC,CAAC;QAPZ;;;;;WAAyC;QAUzC;;;;mBAAO,CAAC,EAA+B,EAAE,EAAE;gBACzC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YACf,CAAC;WAAC;QAEF;;;;mBAAQ,CAAC,KAAgB,EAAE,EAAE;gBAC3B,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;oBACZ,OAAO;iBACR;gBACD,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;oBAC7C,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;iBACjB;gBACD,IAAI,KAAK,CAAC,GAAG,EAAE;oBACb,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;iBACrB;YACH,CAAC;WAAC;IAhBF,CAAC;CAiBF;AA1BD,oCA0BC","sourcesContent":["import { MuteHandlerBase, MuteInput, MuteOutput } from \"./mute\";\n\nexport class MuteCallback extends MuteHandlerBase {\n  private cb?: (input: MuteOutput) => void;\n\n  constructor(props: ConstructorParameters<typeof MuteHandlerBase>[1]) {\n    super((o) => {\n      if (this.cb) {\n        this.cb(o);\n      }\n    }, props);\n  }\n\n  pipe = (cb: (input: MuteOutput) => void) => {\n    this.cb = cb;\n  };\n\n  input = (input: MuteInput) => {\n    if (!this.cb) {\n      return;\n    }\n    for (const output of this.processInput(input)) {\n      this.cb(output);\n    }\n    if (input.eol) {\n      this.cb = undefined;\n    }\n  };\n}\n"]}