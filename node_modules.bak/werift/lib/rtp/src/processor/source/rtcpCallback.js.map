{"version":3,"file":"rtcpCallback.js","sourceRoot":"","sources":["../../../../../../rtp/src/processor/source/rtcpCallback.ts"],"names":[],"mappings":";;;;;;AAAA,sDAA4B;AAS5B,MAAa,kBAAkB;IAA/B;QACE;;;;;WAAyC;QAEzC;;;;mBAAY,IAAI,iBAAK,EAAE;WAAC;QAMxB;;;;mBAAQ,CAAC,IAAgB,EAAE,EAAE;gBAC3B,IAAI,IAAI,CAAC,EAAE,EAAE;oBACX,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;iBACnB;YACH,CAAC;WAAC;IAWJ,CAAC;IAnBC,IAAI,CAAC,EAA+B;QAClC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACf,CAAC;IAQD,IAAI;QACF,IAAI,IAAI,CAAC,EAAE,EAAE;YACX,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;SACxB;QACD,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAEzB,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;IAClC,CAAC;CACF;AAxBD,gDAwBC","sourcesContent":["import Event from \"rx.mini\";\n\nimport { RtcpPacket } from \"../../rtcp/rtcp\";\n\nexport interface RtcpOutput {\n  rtcp?: RtcpPacket;\n  eol?: boolean;\n}\n\nexport class RtcpSourceCallback {\n  private cb?: (chunk: RtcpOutput) => void;\n\n  onStopped = new Event();\n\n  pipe(cb: (chunk: RtcpOutput) => void) {\n    this.cb = cb;\n  }\n\n  input = (rtcp: RtcpPacket) => {\n    if (this.cb) {\n      this.cb({ rtcp });\n    }\n  };\n\n  stop() {\n    if (this.cb) {\n      this.cb({ eol: true });\n    }\n    this.onStopped.execute();\n\n    this.cb = undefined;\n    this.onStopped.allUnsubscribe();\n  }\n}\n"]}