{"version":3,"file":"depacketizerCallback.js","sourceRoot":"","sources":["../../../../../rtp/src/processor/depacketizerCallback.ts"],"names":[],"mappings":";;;AAAA,iDAKwB;AAExB,MAAa,mBAAoB,SAAQ,8BAAe;IAGtD,YAAY,KAAa,EAAE,UAA+B,EAAE;QAC1D,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAHxB;;;;;WAAiD;QAMjD;;;;mBAAO,CAAC,EAAuC,EAAE,EAAE;gBACjD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,OAAO,IAAI,CAAC;YACd,CAAC;WAAC;QAEF;;;;mBAAQ,CAAC,KAAwB,EAAE,EAAE;gBACnC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;oBACZ,OAAO;iBACR;gBACD,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;oBAC7C,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;iBACjB;gBACD,IAAI,KAAK,CAAC,GAAG,EAAE;oBACb,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;iBACrB;YACH,CAAC;WAAC;IAjBF,CAAC;CAkBF;AAvBD,kDAuBC","sourcesContent":["import {\n  DepacketizeBase,\n  DepacketizerInput,\n  DepacketizerOptions,\n  DepacketizerOutput,\n} from \"./depacketizer\";\n\nexport class DepacketizeCallback extends DepacketizeBase {\n  private cb?: (input: DepacketizerOutput) => void;\n\n  constructor(codec: string, options: DepacketizerOptions = {}) {\n    super(codec, options);\n  }\n\n  pipe = (cb: (input: DepacketizerOutput) => void) => {\n    this.cb = cb;\n    return this;\n  };\n\n  input = (input: DepacketizerInput) => {\n    if (!this.cb) {\n      return;\n    }\n    for (const output of this.processInput(input)) {\n      this.cb(output);\n    }\n    if (input.eol) {\n      this.cb = undefined;\n    }\n  };\n}\n"]}