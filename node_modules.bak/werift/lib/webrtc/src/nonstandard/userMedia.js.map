{"version":3,"file":"userMedia.js","sourceRoot":"","sources":["../../../../src/nonstandard/userMedia.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChildProcess, exec } from \"child_process\";\nimport { createSocket } from \"dgram\";\nimport { setImmediate } from \"timers/promises\";\nimport { v4 } from \"uuid\";\n\nimport { randomPort, uint32Add } from \"../../../common/src\";\nimport { RtpPacket } from \"../../../rtp/src\";\nimport { MediaStreamTrack } from \"../media/track\";\n\nexport const getUserMedia = async (path: string, loop?: boolean) => {\n  const audioPort = await randomPort();\n  const videoPort = await randomPort();\n\n  if (path.endsWith(\".mp4\")) {\n    return new MediaPlayerMp4(audioPort, videoPort, path, loop);\n  } else {\n    return new MediaPlayerWebm(audioPort, videoPort, path, loop);\n  }\n};\n\nexport class MediaPlayerMp4 {\n  private streamId = v4();\n  audio = new MediaStreamTrack({ kind: \"audio\", streamId: this.streamId });\n  video = new MediaStreamTrack({ kind: \"video\", streamId: this.streamId });\n  private process!: ChildProcess;\n  stopped = false;\n\n  constructor(\n    private videoPort: number,\n    private audioPort: number,\n    private path: string,\n    private loop?: boolean\n  ) {\n    this.setupTrack(audioPort, this.audio);\n    this.setupTrack(videoPort, this.video);\n  }\n\n  private setupTrack = (port: number, track: MediaStreamTrack) => {\n    let payloadType = 0;\n\n    const socket = createSocket(\"udp4\");\n    socket.bind(port);\n    socket.on(\"message\", async (buf) => {\n      const rtp = RtpPacket.deSerialize(buf);\n      if (!payloadType) {\n        payloadType = rtp.header.payloadType;\n      }\n\n      // detect gStreamer restarted\n      if (payloadType !== rtp.header.payloadType) {\n        payloadType = rtp.header.payloadType;\n        track.onSourceChanged.execute(rtp.header);\n      }\n\n      track.writeRtp(buf);\n    });\n  };\n\n  async start() {\n    let payloadType = 96;\n    const run = async () => {\n      if (payloadType > 100) payloadType = 96;\n\n      const cmd = `gst-launch-1.0 filesrc location= ${this.path} ! \\\nqtdemux name=d ! \\\nqueue ! h264parse ! rtph264pay config-interval=10 pt=${payloadType++} ! \\\nudpsink host=127.0.0.1 port=${this.videoPort} d. ! \\\nqueue ! aacparse ! avdec_aac ! audioresample ! audioconvert ! opusenc ! rtpopuspay pt=${payloadType++} ! \\\nudpsink host=127.0.0.1 port=${this.audioPort}`;\n      this.process = exec(cmd);\n\n      if (this.loop) {\n        await new Promise((r) => this.process.on(\"close\", r));\n        if (!this.stopped) {\n          run();\n        }\n      }\n    };\n    await setImmediate();\n    run();\n  }\n\n  stop() {\n    this.stopped = true;\n    this.process.kill(\"SIGINT\");\n  }\n}\n\nexport class MediaPlayerWebm {\n  private streamId = v4();\n  audio = new MediaStreamTrack({ kind: \"audio\", streamId: this.streamId });\n  video = new MediaStreamTrack({ kind: \"video\", streamId: this.streamId });\n  private process!: ChildProcess;\n  stopped = false;\n\n  constructor(\n    private videoPort: number,\n    private audioPort: number,\n    private path: string,\n    private loop?: boolean\n  ) {\n    this.setupTrack(audioPort, this.audio);\n    this.setupTrack(videoPort, this.video);\n  }\n\n  private setupTrack = (port: number, track: MediaStreamTrack) => {\n    let payloadType = 0;\n    let latestTimestamp = 0;\n    let timestampDiff = 0;\n\n    const socket = createSocket(\"udp4\");\n    socket.bind(port);\n    socket.on(\"message\", async (buf) => {\n      const rtp = RtpPacket.deSerialize(buf);\n      if (!payloadType) {\n        payloadType = rtp.header.payloadType;\n      }\n\n      // detect gStreamer restarted\n      if (payloadType !== rtp.header.payloadType) {\n        payloadType = rtp.header.payloadType;\n        track.onSourceChanged.execute(rtp.header);\n        timestampDiff = uint32Add(rtp.header.timestamp, -latestTimestamp);\n        console.log({ timestampDiff });\n      }\n      latestTimestamp = rtp.header.timestamp;\n      rtp.header.timestamp = uint32Add(rtp.header.timestamp, -timestampDiff);\n      track.writeRtp(rtp.serialize());\n    });\n  };\n\n  async start() {\n    let payloadType = 96;\n    const run = async () => {\n      if (payloadType > 100) payloadType = 96;\n\n      const cmd = `gst-launch-1.0 filesrc location=${\n        this.path\n      } ! matroskademux name=d \\\nd.video_0 ! queue ! rtpvp8pay pt=${payloadType++} ! \\\nudpsink host=127.0.0.1 port=${this.videoPort} \\\nd.audio_0 ! queue ! rtpopuspay pt=${payloadType++} ! \\\nudpsink host=127.0.0.1 port=${this.audioPort}`;\n      this.process = exec(cmd);\n      console.log(cmd);\n\n      if (this.loop) {\n        await new Promise((r) => this.process.on(\"close\", r));\n        if (!this.stopped) {\n          run();\n        }\n      }\n    };\n    await setImmediate();\n    run();\n  }\n\n  stop() {\n    this.stopped = true;\n    this.process.kill(\"SIGINT\");\n  }\n}\n"]}